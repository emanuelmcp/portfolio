---
import aws from "../assets/stack/aws.png";
import java from "../assets/stack/java.png";
import nestjs from "../assets/stack/nestjs.png";
import postgre from "../assets/stack/postgre.png";
import redis from "../assets/stack/redis.png";
import docker from "../assets/stack/docker.png";
import spring from "../assets/stack/spring.png";
import typescript from "../assets/stack/typescript.png";
import angular from "../assets/stack/angular.png";
import { Image } from "astro:assets";

const techStack = {
  languages: [
    { name: "Java", icon: java },
    { name: "TypeScript", icon: typescript },
  ],
  frameworks: [
    { name: "Spring", icon: spring },
    { name: "NestJS", icon: nestjs },
    { name: "Angular", icon: angular },
  ],
  infrastructure: [
    { name: "PostgreSQL", icon: postgre },
    { name: "Redis", icon: redis },
    { name: "Docker", icon: docker },
    { name: "AWS", icon: aws },
  ],
};
---

<section
  id="hero"
  class="min-h-screen flex items-center justify-center px-4 py-20"
>
  <div class="container mx-auto max-w-6xl space-y-8">
    <!-- Desktop: ASCII header (solo en pantallas grandes) -->
    <div
      class="hidden lg:block text-primary text-xs md:text-sm leading-tight overflow-x-auto"
      aria-hidden="true"
    >
      <pre
        class="text-center">
{`
โโโโโโโโโโโโ   โโโโ โโโโโโ โโโโ   โโโโโโ   โโโโโโโโโโโโโโ          โโโโโโโ โโโโโโ โโโโโโโ โโโโโโโ โโโโโโโโโโโโโโโ  โโโโโโโ 
โโโโโโโโโโโโโ โโโโโโโโโโโโโโโโโโ  โโโโโโ   โโโโโโโโโโโโโโ         โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
โโโโโโ  โโโโโโโโโโโโโโโโโโโโโโโโโ โโโโโโ   โโโโโโโโโ  โโโ         โโโ     โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ  โโโโโโโโโโโ   โโโ
โโโโโโ  โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ   โโโโโโโโโ  โโโ         โโโ     โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ  โโโโโโโโโโโ   โโโ
โโโโโโโโโโโ โโโ โโโโโโ  โโโโโโ โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ    โโโโโโโโโโโ  โโโโโโ  โโโโโโ  โโโโโโโโโโโโโโ  โโโโโโโโโโโโ
โโโโโโโโโโโ     โโโโโโ  โโโโโโ  โโโโโ โโโโโโโ โโโโโโโโโโโโโโโโ     โโโโโโโโโโ  โโโโโโ  โโโโโโ  โโโโโโโโโโโโโโ  โโโ โโโโโโโ 
`}
  </pre>
    </div>
    <!-- Typing effect -->
    <div class="text-center space-y-4">
      <h1 class="text-2xl md:text-4xl font-bold text-primary">
        {">"}
        <span id="typing-text" class="terminal-cursor"></span>
      </h1>
      <p class="text-muted-foreground text-sm md:text-base max-w-2xl mx-auto">
        Construyendo sistemas robustos y escalables desde el backend.<br />
        Especializado en arquitecturas distribuidas, APIs y optimizaciรณn de rendimiento.
      </p>
    </div>
    <!-- Tech Stack -->
    <div class="mt-12 max-w-3xl mx-auto border border-primary/30 rounded shadow-sm font-mono text-sm">
      <div class="folder-header flex items-center justify-between bg-primary/10 px-3 py-1 cursor-pointer select-none">
        <div class="flex items-center gap-1 min-h-6">
          <span class="folder-icon text-accent">๐</span>
          <span class="font-semibold">TechStack.exe</span>
        </div>
        <div class="folder-controls flex gap-2">
          <button class="w-3 h-3 rounded-full bg-red-500"></button>
          <button class="w-3 h-3 rounded-full bg-yellow-400"></button>
          <button class="w-3 h-3 rounded-full bg-green-500"></button>
        </div>
      </div>
      <!-- Contenido de la ventana -->
      <div class="p-6 space-y-4 min-h-[30vh]">
        <!-- Languages -->
        <div class="folder cursor-pointer" data-folder="languages">
          <button
            class="folder-btn flex items-center gap-2 text-primary hover:text-accent w-full text-left group transition-colors"
          >
            <span class="folder-icon text-accent">๐</span>
            <span class="group-hover:underline cursor-pointer">lenguajes/</span>
          </button>
          <div class="folder-content ml-6 mt-2 space-y-1">
            {
              techStack.languages.map((tech) => (
                <div class="flex items-center gap-2 text-muted-foreground hover:text-foreground transition-colors">
                  <span class="text-primary">โโโ</span>
                  <Image src={tech.icon} alt={tech.name} class="w-4 h-4" />
                  <span>{tech.name}</span>
                </div>
              ))
            }
          </div>
        </div>
        <!-- Frameworks -->
        <div class="folder cursor-pointer" data-folder="frameworks">
          <button
            class="folder-btn flex items-center gap-2 text-primary hover:text-accent w-full text-left group transition-colors"
          >
            <span class="folder-icon text-accent">๐</span>
            <span class="group-hover:underline cursor-pointer">frameworks/</span
            >
          </button>
          <div class="folder-content ml-6 mt-2 space-y-1">
            {
              techStack.frameworks.map((tech) => (
                <div class="flex items-center gap-2 text-muted-foreground hover:text-foreground transition-colors">
                  <span class="text-primary">โโโ</span>
                  <Image src={tech.icon} alt={tech.name} class="w-4 h-4" />
                  <span>{tech.name}</span>
                </div>
              ))
            }
          </div>
        </div>

        <!-- Infrastructure -->
        <div class="folder cursor-pointer" data-folder="infrastructure">
          <button
            class="folder-btn flex items-center gap-2 text-primary hover:text-accent w-full text-left group transition-colors"
          >
            <span class="folder-icon text-accent">๐</span>
            <span class="group-hover:underline cursor-pointer"
              >infraestructura/</span
            >
          </button>
          <div class="folder-content ml-6 mt-2 space-y-1">
            {
              techStack.infrastructure.map((tech) => (
                <div class="flex items-center gap-2 text-muted-foreground hover:text-foreground transition-colors">
                  <span class="text-primary">โโโ</span>
                  <Image src={tech.icon} alt={tech.name} class="w-4 h-4" />
                  <span>{tech.name}</span>
                </div>
              ))
            }
          </div>
        </div>
      </div>
    </div>

    <!-- Terminal Prompt -->
    <div class="text-center mt-12 text-muted-foreground text-sm">
      <p>{">"} Presiona cualquier tecla para continuar...</p>
    </div>
  </div>
</section>

<style>
  .terminal-cursor::after {
    content: "_";
    animation: blink 1s step-end infinite;
  }
  @keyframes blink {
    from,
    to {
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
  }
</style>

<script is:inline>
  // Typing effect
  const text = "Ingeniero de Software | Especialista en Backend";
  const typingEl = document.getElementById("typing-text");
  let i = 0;
  const typingInterval = setInterval(() => {
    typingEl.textContent = text.slice(0, i);
    i++;
    if (i > text.length) clearInterval(typingInterval);
  }, 50);

  // Folder toggles
  document.querySelectorAll(".folder").forEach((folder) => {
    const btn = folder.querySelector(".folder-btn");
    const content = folder.querySelector(".folder-content");
    const icon = folder.querySelector(".folder-icon");

    btn.addEventListener("click", () => {
      const open = content.classList.toggle("hidden");
      icon.textContent = open ? "๐" : "๐";
    });
  });
</script>
