---
import aws from "../assets/stack/aws.png";
import java from "../assets/stack/java.png";
import nestjs from "../assets/stack/nestjs.png";
import postgre from "../assets/stack/postgre.png";
import redis from "../assets/stack/redis.png";
import docker from "../assets/stack/docker.png";
import spring from "../assets/stack/spring.png";
import typescript from "../assets/stack/typescript.png";
import angular from "../assets/stack/angular.png";
import { Image } from "astro:assets";

const techStack = {
  languages: [
    { name: "Java", icon: java },
    { name: "TypeScript", icon: typescript },
  ],
  frameworks: [
    { name: "Spring", icon: spring },
    { name: "NestJS", icon: nestjs },
    { name: "Angular", icon: angular },
  ],
  infrastructure: [
    { name: "PostgreSQL", icon: postgre },
    { name: "Redis", icon: redis },
    { name: "Docker", icon: docker },
    { name: "AWS", icon: aws },
  ],
  softSkills: [
    { name: "Spring", icon: spring },
    { name: "NestJS", icon: nestjs },
    { name: "Angular", icon: angular },
  ],
};
---

<section
  id="hero"
  class="min-h-screen flex items-center justify-center px-4 py-20"
>
  <div class="container mx-auto max-w-6xl space-y-8">
    <!-- ASCII header -->
    <div
      class="hidden lg:block text-primary text-xs md:text-sm leading-tight overflow-x-auto"
      aria-hidden="true"
    >
      <pre
        class="text-center">
{`
███████╗███╗   ███╗ █████╗ ███╗   ██╗██╗   ██╗███████╗██╗          ██████╗ █████╗ ██████╗ ██████╗ ███████╗██████╗  ██████╗ 
██╔════╝████╗ ████║██╔══██╗████╗  ██║██║   ██║██╔════╝██║         ██╔════╝██╔══██╗██╔══██╗██╔══██╗██╔════╝██╔══██╗██╔═══██╗
█████╗  ██╔████╔██║███████║██╔██╗ ██║██║   ██║█████╗  ██║         ██║     ███████║██████╔╝██████╔╝█████╗  ██████╔╝██║   ██║
██╔══╝  ██║╚██╔╝██║██╔══██║██║╚██╗██║██║   ██║██╔══╝  ██║         ██║     ██╔══██║██╔══██╗██╔══██╗██╔══╝  ██╔══██╗██║   ██║
███████╗██║ ╚═╝ ██║██║  ██║██║ ╚████║╚██████╔╝███████╗███████╗    ╚██████╗██║  ██║██║  ██║██║  ██║███████╗██║  ██║╚██████╔╝
╚══════╝╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚══════╝╚══════╝     ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝ ╚═════╝ 
`}
      </pre>
    </div>

    <!-- Typing effect -->
    <div class="text-center space-y-4">
      <h1 class="text-2xl md:text-4xl font-bold text-primary">
        {">"}
        <span id="typing-text" class="after:content-['_'] after:animate-blink"
        ></span>
      </h1>
      <p class="text-muted-foreground text-sm md:text-base max-w-2xl mx-auto">
        Construyendo sistemas robustos y escalables desde el backend.<br />
        Especializado en arquitecturas distribuidas, APIs y optimización de rendimiento.
      </p>
    </div>

    <!-- Terminal -->
    <div
      class="border border-primary/30 rounded-xl shadow-lg shadow-primary/10 bg-black/80 text-primary/90 overflow-hidden backdrop-blur-sm min-h-[78vh] relative"
    >
      <!-- Header -->
      <div
        class="flex items-center justify-between bg-primary/15 px-3 py-1 border-b border-primary/20"
      >
        <span class="text-green-400 font-semibold"
          >Terminal — TechStack v1.0</span
        >
        <div class="flex gap-2">
          <span class="w-3 h-3 rounded-full bg-red-500"></span>
          <span class="w-3 h-3 rounded-full bg-yellow-400"></span>
          <span class="w-3 h-3 rounded-full bg-green-500"></span>
        </div>
      </div>

      <!-- Body -->
      <div class="p-6 space-y-4 min-h-[65vh] text-sm">
        <p class="text-green-400">{">"} hackeando expediente...</p>

        {
          Object.entries(techStack).map(([category, items], index) => (
            <div
              class="opacity-0 translate-y-2 transition-all duration-500 ease-out folder"
              data-folder={category}
            >
              <button class="flex items-center gap-2 text-foreground hover:text-accent w-full text-left transition folder-btn">
                <span class="text-accent folder-icon">
                  {index < 2 ? "📂" : "📁"}
                </span>
                <span class="underline-offset-2 hover:underline cursor-pointer capitalize">
                  {category}
                </span>
              </button>

              <div
                class={`ml-6 mt-2 transition-all duration-300 origin-top folder-content ${index < 2 ? "" : "hidden scale-y-90 opacity-0 max-h-0 overflow-hidden"}`}
              >
                {items.map((tech) => (
                  <div class="flex items-center gap-2 py-1 text-muted-foreground hover:text-foreground transition group">
                    <span class="text-primary">├──</span>
                    <Image
                      src={tech.icon}
                      alt={tech.name}
                      class="w-5 h-5 opacity-80 group-hover:opacity-100 transition"
                    />
                    <span>{tech.name}</span>
                  </div>
                ))}
              </div>
            </div>
          ))
        }
      </div>

      <p
        id="final-message"
        class="text-green-400 absolute bottom-4 left-6 right-6 text-sm opacity-0 fade-in-final"
      >
        {">"} Expediente hackeado. Pincha en cada carpeta para ver su contenido.
      </p>
    </div>

    <div class="text-center mt-12 text-muted-foreground text-sm">
      <p>{">"} Presiona cualquier tecla para continuar...</p>
    </div>
  </div>
</section>

<style is:global>
  @layer utilities {
    @keyframes blink {
      50% {
        opacity: 0;
      }
    }
    .animate-blink {
      animation: blink 1s step-end infinite;
    }

    .animate-blink-soft {
      animation: blinkSoft 1s step-end infinite;
    }

    @keyframes fadeInHacker {
      0% {
        opacity: 0;
        transform: translateY(10px);
        filter: brightness(0.6);
      }
      60% {
        opacity: 1;
        transform: translateY(0);
        filter: brightness(1.2);
      }
      100% {
        opacity: 1;
        filter: brightness(1);
      }
    }
    .reveal {
      animation: fadeInHacker 0.6s ease-out forwards;
    }

    @keyframes fadeInFinal {
      to {
        opacity: 1;
      }
    }
    .fade-in-final {
      animation: fadeInFinal 1s ease-out forwards;
    }

    @keyframes pulseInvite {
      0%,
      100% {
        filter: brightness(1);
        transform: scale(1);
      }
      50% {
        filter: brightness(1.6);
        transform: scale(1.1);
      }
    }
    .invite {
      animation: pulseInvite 1.2s ease-in-out infinite;
    }
  }
</style>

<script is:inline>
  const text = "Ingeniero de Software | Especialista en Backend";
const typingEl = document.getElementById("typing-text");
const folders = document.querySelectorAll(".folder");
const finalMessage = document.getElementById("final-message");

// Función para animar el texto
function typeText(el, text, interval = 50) {
  let i = 0;
  const timer = setInterval(() => {
    el.textContent = text.slice(0, i);
    i++;
    if (i > text.length) clearInterval(timer);
  }, interval);
}

// Función para configurar el folder
function setupFolder(folder, index, isLast) {
  folder.classList.add("reveal");

  const content = folder.querySelector(".folder-content");
  const icon = folder.querySelector(".folder-icon");
  const btn = folder.querySelector(".folder-btn");
  const label = folder.querySelector("span.cursor-pointer");

  if (index < 2) {
    content.classList.remove("hidden");
    icon.textContent = "📂";
  } else {
    icon.classList.add("invite");
    label.classList.add("animate-blink-soft");
  }

  btn.addEventListener("click", () => toggleFolder(content, icon, label));

  if (isLast) {
    setTimeout(() => finalMessage.classList.add("fade-in-final"), 800);
  }
}

// Función para alternar estado del folder
function toggleFolder(content, icon, label) {
  const hidden = content.classList.toggle("hidden");

  content.classList.toggle("opacity-0", hidden);
  content.classList.toggle("scale-y-90", hidden);
  content.classList.toggle("max-h-0", hidden);
  content.classList.toggle("overflow-hidden", hidden);

  if (hidden) {
    icon.textContent = "📁";
    icon.classList.add("invite");
    label.classList.add("animate-blink-soft");
  } else {
    icon.textContent = "📂";
    icon.classList.remove("invite");
    label.classList.remove("animate-blink-soft");
  }
}

// Ejecutar animaciones
typeText(typingEl, text);

folders.forEach((folder, index) =>
  setTimeout(() => setupFolder(folder, index, index === folders.length - 1), index * 400 + 800)
);
</script>
