---
import aws from "../assets/stack/aws.png";
import java from "../assets/stack/java.png";
import nestjs from "../assets/stack/nestjs.png";
import postgre from "../assets/stack/postgre.png";
import redis from "../assets/stack/redis.png";
import docker from "../assets/stack/docker.png";
import spring from "../assets/stack/spring.png";
import typescript from "../assets/stack/typescript.png";
import angular from "../assets/stack/angular.png";
import { Image } from "astro:assets";

const techStack = [
  // Lenguajes
  { name: "Java", icon: java },
  { name: "TypeScript", icon: typescript },
  { name: "PostgreSQL", icon: postgre },

  // Frameworks
  { name: "Spring", icon: spring },
  { name: "Nestjs", icon: nestjs },
  { name: "Angular", icon: angular },

  // Infraestructura
  { name: "Docker", icon: docker },
  { name: "Redis", icon: redis },
  { name: "AWS", icon: aws },
];

---

<section
  id="hero"
  class="min-h-screen flex items-center justify-center px-4 py-20"
>
  <div class="container mx-auto max-w-6xl">
    <div class="space-y-8">
      {/* ASCII Art Header */}
      <div
        class="text-primary text-xs md:text-sm leading-tight overflow-x-auto"
      >
        <pre
          class="text-center">
              {`
███████╗███╗   ███╗ █████╗ ███╗   ██╗██╗   ██╗███████╗██╗          ██████╗ █████╗ ██████╗ ██████╗ ███████╗██████╗  ██████╗ 
██╔════╝████╗ ████║██╔══██╗████╗  ██║██║   ██║██╔════╝██║         ██╔════╝██╔══██╗██╔══██╗██╔══██╗██╔════╝██╔══██╗██╔═══██╗
█████╗  ██╔████╔██║███████║██╔██╗ ██║██║   ██║█████╗  ██║         ██║     ███████║██████╔╝██████╔╝█████╗  ██████╔╝██║   ██║
██╔══╝  ██║╚██╔╝██║██╔══██║██║╚██╗██║██║   ██║██╔══╝  ██║         ██║     ██╔══██║██╔══██╗██╔══██╗██╔══╝  ██╔══██╗██║   ██║
███████╗██║ ╚═╝ ██║██║  ██║██║ ╚████║╚██████╔╝███████╗███████╗    ╚██████╗██║  ██║██║  ██║██║  ██║███████╗██║  ██║╚██████╔╝
╚══════╝╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚══════╝╚══════╝     ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝ ╚═════╝ 
                                                                                                                           
`}
            </pre>
      </div>

      {/* Typing Effect Title */}
      <div class="text-center space-y-4">
        <h1 class="text-2xl md:text-4xl font-bold text-primary">
          {">"}
          <span id="typing-text" class="terminal-cursor"></span>
        </h1>
        <p class="text-muted-foreground text-sm md:text-base max-w-2xl mx-auto">
          {"// "} Construyendo sistemas robustos y escalables desde el backend.
          <br />
          {"// "} Especializado en arquitecturas distribuidas, APIs y optimización
          de rendimiento.
        </p>
      </div>
      {/* Tech Stack Grid */}
      <div class="mt-12">
        <p class="text-accent text-center mb-6">{">"} cat tech_stack.txt</p>
        <div class="grid grid-cols-2 md:grid-cols-3 gap-4 max-w-3xl mx-auto">
          {
            techStack.map((tech, index) => (
              <div
                class="border border-primary/30 bg-card p-4 hover:border-primary hover:bg-primary/5 transition-all group"
                style={{ animationDelay: `${index * 100}ms` }}
              >
                <div class="flex items-center gap-3">
                  <span class="text-2xl group-hover:scale-110 transition-transform">
                    <Image src={tech.icon} alt={"Prueba"} class={"w-6 h-6"}/>
                  </span>
                  <span class="text-sm text-foreground">{tech.name}</span>
                </div>
              </div>
            ))
          }
        </div>
      </div>
      {/* Terminal Prompt */}
      <div class="text-center mt-12 text-muted-foreground text-sm">
        <p>{">"} Presiona cualquier tecla para continuar...</p>
      </div>
    </div>
  </div>
</section>

<script is:inline>
  const fullText = "Desarrollador fullstack especializado en backend";
  const typingEl = document.getElementById("typing-text");

  let index = 0;

  function type() {
    if (!typingEl) return;
    if (index <= fullText.length) {
      typingEl.textContent = fullText.slice(0, index);
      index++;
      setTimeout(type, 50);
    }
  }

  type();
</script>
