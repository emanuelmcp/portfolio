---
import { Docker } from 'simple-icons-astro';
const techStack = [
  { name: "Java", icon: "โฌข" },
  { name: "TypeScript", icon: "๐" },
  { name: "PostgreSQL", icon: "๐" },
  { name: "Docker", icon: <Docker />, },

  { name: "Redis", icon: "โ" },
  { name: "AWS", icon: "โ" },
  { name: "TypeScript", icon: "TS" },
  { name: "Angular", icon: "Go" },


  { name: "Node.js", icon: "๐ข" },
  { name: "GraphQL", icon: "๐ธ๏ธ" },
  { name: "Kubernetes", icon: "โธ๏ธ" },
  { name: "MongoDB", icon: "๐" },
];
---

<section
  id="hero"
  class="min-h-screen flex items-center justify-center px-4 py-20"
>
  <div class="container mx-auto max-w-6xl">
    <div class="space-y-8">
      {/* ASCII Art Header */}
      <div
        class="text-primary text-xs md:text-sm leading-tight overflow-x-auto"
      >
        <pre
          class="text-center">
              {`
 โโโโโโโ โโโโโโโ โโโโโโโ โโโโโโโโ    โโโ  โโโ โโโโโโ  โโโโโโโโโโ  โโโโโโโโโโโโโโโโโโ 
โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ    โโโ  โโโโโโโโโโโโโโโโโโโโโโ โโโโโโโโโโโโโโโโโโโโ
โโโ     โโโ   โโโโโโ  โโโโโโโโโ      โโโโโโโโโโโโโโโโโโโ     โโโโโโโ โโโโโโ  โโโโโโโโ
โโโ     โโโ   โโโโโโ  โโโโโโโโโ      โโโโโโโโโโโโโโโโโโโ     โโโโโโโ โโโโโโ  โโโโโโโโ
โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ    โโโ  โโโโโโ  โโโโโโโโโโโโโโ  โโโโโโโโโโโโโโ  โโโ
 โโโโโโโ โโโโโโโ โโโโโโโ โโโโโโโโ    โโโ  โโโโโโ  โโโ โโโโโโโโโโ  โโโโโโโโโโโโโโ  โโโ
`}
            </pre>
      </div>

      {/* Typing Effect Title */}
      <div class="text-center space-y-4">
        <h1 class="text-2xl md:text-4xl font-bold text-primary">
          {">"}
          <span id="typing-text" class="terminal-cursor"></span>
        </h1>
        <p class="text-muted-foreground text-sm md:text-base max-w-2xl mx-auto">
          {"// "} Construyendo sistemas robustos y escalables desde el backend.
          <br />
          {"// "} Especializado en arquitecturas distribuidas, APIs y optimizaciรณn
          de rendimiento.
        </p>
      </div>

      {/* Tech Stack Grid */}
      <div class="mt-12">
        <p class="text-accent text-center mb-6">{">"} cat tech_stack.txt</p>
        <div class="grid grid-cols-2 md:grid-cols-4 gap-4 max-w-3xl mx-auto">
          {
            techStack.map((tech, index) => (
              <div
                class="border border-primary/30 bg-card p-4 hover:border-primary hover:bg-primary/5 transition-all group"
                style={{ animationDelay: `${index * 100}ms` }}
              >
                <div class="flex items-center gap-3">
                  <span class="text-2xl group-hover:scale-110 transition-transform">
                    {tech.icon}
                  </span>
                  <span class="text-sm text-foreground">{tech.name}</span>
                </div>
              </div>
            ))
          }
        </div>
      </div>

      {/* Terminal Prompt */}
      <div class="text-center mt-12 text-muted-foreground text-sm">
        <p>{">"} Presiona cualquier tecla para continuar...</p>
      </div>
    </div>
  </div>
</section>
<script is:inline>
  const fullText = "Fullstack Developer // Heavy Backend";
  const typingEl = document.getElementById("typing-text");

  let index = 0;

  function type() {
    if (!typingEl) return;
    if (index <= fullText.length) {
      typingEl.textContent = fullText.slice(0, index);
      index++;
      setTimeout(type, 50);
    }
  }

  type();
</script>
